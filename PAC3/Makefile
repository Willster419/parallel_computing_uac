# general vars ################################
JOB_NAME    ?= null
JOB_SOURCE   = $(JOB_NAME).c
JOB_SCRIPT   = $(JOB_NAME).sh
DOLLAR       = $$
###############################################

# direct file targets #########################
hello : hello.c
	mpicc hello.c  -o hello

p7_gather : p7_gather.c
	mpicc $(@).c -o $(@)

p7_reduce : p7_reduce.c
	mpicc $(@).c -o $(@)

p7_send : p7_send.c
	mpicc $(@).c -o $(@)

p8_parallel : p8_parallel.c
	mpicc $(@).c -o $(@)

p8_sequential : p8_sequential.c
	mpicc $(@).c -o $(@)
###############################################

# makefile custom targets #####################
compile_hello : hello
.PHONY: compile_hello

run_hello : compile_hello
	@echo "Submitting job '$(@)'"
	qsub sge_hello.sh
.PHONY: run_hello

run_reduce : reduce
	@echo "Submitting job 'reduce'"
	qsub sge_reduce.sh
.PHONY: run_reduce

compile_all : hello p7_gather p7_reduce p7_send p7_gather p8_parallel p8_sequential
.PHONY: compile_all
###############################################

# dynamic MPI submit jobs #####################
submit_job_local:
	@echo "Verifying that variable JOB_NAME is defined..."
	test -n "$(JOB_NAME)"
	@echo "Verifying that source file $(JOB_SOURCE) exists..."
	test -f $(JOB_SOURCE)
	@echo "Exists, compile and run"
	mpicc $(JOB_SOURCE) -o $(JOB_NAME)
	@echo "$(JOB_NAME) compiled, running"
	mpirun -np 8 ./$(JOB_NAME)

submit_job :
	@echo "Verifying that variable JOB_NAME is defined..."
	test -n "$(JOB_NAME)"
	@echo "Verifying that source file $(JOB_SOURCE) exists..."
	test -f $(JOB_SOURCE)
	@echo "Exists, compile and submit"
	mpicc $(JOB_SOURCE) -o $(JOB_NAME)
	@echo "$(JOB_NAME) compiled, generating script to submit it"
	@rm -rf $(JOB_SCRIPT)
	@echo "#!/bin/bash" >> $(JOB_SCRIPT)
	@echo "" >> $(JOB_SCRIPT)
	@echo "" >> $(JOB_SCRIPT)
	@echo "# SGE submit script for job $(JOB_NAME)" >> $(JOB_SCRIPT)
	@echo "# This script was generated by the makefile in this directory with the command" >> $(JOB_SCRIPT)
	@echo "# make submit_job JOB_NAME=$(JOB_NAME)" >> $(JOB_SCRIPT)
	@echo "" >> $(JOB_SCRIPT)
	@echo "" >> $(JOB_SCRIPT)
	@echo "# Run the script using the BASH shell" >> $(JOB_SCRIPT)
	@echo "#$$ -S /bin/bash" >> $(JOB_SCRIPT)
	@echo "" >> $(JOB_SCRIPT)
	@echo "# Run the job in the same directory as you submitted" >> $(JOB_SCRIPT)
	@echo "#$$ -cwd" >> $(JOB_SCRIPT)
	@echo "" >> $(JOB_SCRIPT)
	@echo "# The name of the job. The name should follow the "name" definition in sge_types(1).  Invalid job names will be denied at submit time" >> $(JOB_SCRIPT)
	@echo "#$$ -N $(JOB_NAME)" >> $(JOB_SCRIPT)
	@echo "" >> $(JOB_SCRIPT)
	@echo "# The path used for the standard output stream of the job" >> $(JOB_SCRIPT)
#	@echo "#$$ -o $(JOB_NAME).out.\$(DOLLAR)JOB_ID" >> $(JOB_SCRIPT)
	@echo "#$$ -o $(JOB_NAME).out.log" >> $(JOB_SCRIPT)
	@echo "" >> $(JOB_SCRIPT)
	@echo "# Defines or redefines the path used for the standard error stream of the job" >> $(JOB_SCRIPT)
#	@echo "#$$ -e $(JOB_NAME).err.\$(DOLLAR)JOB_ID" >> $(JOB_SCRIPT)
	@echo "#$$ -e $(JOB_NAME).err.log" >> $(JOB_SCRIPT)
	@echo "" >> $(JOB_SCRIPT)
	@echo "# Parallel programming environment (PE) to instantiate" >> $(JOB_SCRIPT)
	@echo "#$$ -pe orte 8" >> $(JOB_SCRIPT)
	@echo "" >> $(JOB_SCRIPT)
	@echo "# RUNNING THIS COMMAND" >> $(JOB_SCRIPT)
	@echo "mpirun -np 8 ./$(JOB_NAME)" >> $(JOB_SCRIPT)
	@echo "Script created, setting permissions and submitting"
	@chmod 755 $(JOB_SCRIPT)
	qsub $(JOB_SCRIPT)

.PHONY: submit_job
###############################################
